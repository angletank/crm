<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.crm.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_pwd, email,phone,is_valid,true_name, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{userId,jdbcType=INTEGER}
  </select>

  <!-- 通过用户名查询用户对象，返回用户对象 -->
  <select id="queryUserByName" parameterType="string" resultType="com.xxxx.crm.vo.User">
    select * from t_user where user_name = #{userName}
  </select>

  <!-- 修改密码 -->
  <update id="updateUserPwd">
    update
        t_user
    set
        user_pwd = #{userPwd}, update_date=now()
    where
        id = #{userId}
  </update>

  <!-- 查询所有的销售人员 -->
  <select id="queryAllSales" resultType="java.util.Map">
    select u.id,u.user_name as uname from t_user u
    left join t_user_role tur on u.id = tur.user_id
    left join t_role r on tur.role_id = r.id
    where u.is_valid = 1 and r.is_valid = 1 and r.role_name = '销售'
  </select>

  <select id="selectByParams" parameterType="com.xxxx.crm.query.UserQuery" resultType="com.xxxx.crm.vo.User">
    select
        *
    from
        t_user
    <where>
      is_valid = 1

      <if test="null != userName and userName != '' ">
        and user_name like concat('%',#{userName},'%')
      </if>
      <if test="null != email and email != '' ">
        and email like concat('%',#{email},'%')
      </if>
      <if test="null != phone and phone != '' ">
        and phone like concat('%',#{phone},'%')
      </if>


    </where>
  </select>

    <!--
          parameterType ，入参的全限定类名或类型别名
          keyColumn ，设置数据表自动生成的主键名。对特定数据库（如PostgreSQL），若自动生成的主键不是第一个字段则必须设置
          useGeneratedKeys ，取值范围true|false(默认值)，设置是否使用JDBC的getGenereatedKeys方法获取主键并赋值到keyProperty设置的领域模型属性中。
          keyProperty ，默认值unset，用于设置getGeneratedKeys方法或selectKey子元素返回值将赋值到领域模型的哪个属性中
    -->
  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into
        t_user (user_name, user_pwd, true_name, email, phone, is_valid, create_date, update_date)
    values
        (#{userName},#{userPwd},#{trueName},#{email},#{phone},1,now(),now())

  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.User">
    update
        t_user
    set
        user_name = #{userName},
        true_name = #{trueName},
        email = #{email},
        phone = #{phone},
        update_date = now()
    where
        id = #{id}
  </update>


  <update id="deleteBatch">
      update
        t_user
      set
        is_valid = 0, update_date=now()
      where
        id
      in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
  </update>

</mapper>